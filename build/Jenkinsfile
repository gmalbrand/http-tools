pipeline {
  agent none

  environment {
    REPOSITORY='gmalbrand/http-tools'
  }

  stages {
    stage('Build') {
      agent {
        docker {
          label 'docker'
          image 'golang:1.19.3-alpine'
          args '-e GOCACHE=/tmp'
        }
      }
      steps {
        sh 'pwd'
        sh 'ls -l'
        sh 'make all'
      }
    }

    stage('Publish to dockerhub'){
      agent {label 'docker'}
      steps {
          withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', passwordVariable: 'docker_pwd', usernameVariable: 'docker_user')]) {
            sh 'echo "$docker_pwd" | docker login -u $docker_user --password-stdin 2>/dev/null'
            sh 'docker buildx build --push --secret id=docker_pwd -t "$REPOSITORY:$BRANCH_NAME-$BUILD_NUMBER" -t $REPOSITORY:latest --platform "linux/amd64,linux/arm64" -f build/Dockerfile .' 
            sh 'docker logout'
          }
      }
    }
    
  }

  post {
      always{
          emailext body: '$DEFAULT_CONTENT', subject: '[Jenkins] $DEFAULT_SUBJECT', to: '$DEFAULT_RECIPIENTS'
      }
  }
}
